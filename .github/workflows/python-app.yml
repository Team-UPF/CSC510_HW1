name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  autopep8:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install autopep8

    - name: Run AutoPep8
      run: |
        autopep8 --in-place --aggressive --aggressive hw2/hw2_debugging.py hw2/rand.py

  pylint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install pylint

    - name: Run Pylint
      run: |
        pylint hw2/hw2_debugging.py hw2/rand.py

  # flake8:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.x'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install flake8

  #   - name: Run Flake8
  #     run: |
  #       flake8 hw2/hw2_debugging.py hw2/rand.py

  mypy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install mypy

    - name: Run Mypy
      run: |
        mypy hw2/hw2_debugging.py hw2/rand.py

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install pytest coverage codecov

    - name: Run Tests with Pytest
      run: |
        pytest hw2/test_merge_sort.py

    - name: Run coverage
      run: |
        coverage run -m pytest
        coverage report
        coverage html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
